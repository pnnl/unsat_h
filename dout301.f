      PROGRAM DATAOUT
!-----------------------------------------------------------------------
!     Calls HARDCOPY, LISTDATA, PROFILER, REINIT, SCAN, and WELCOME
!
!     Processes the binary output file (*.RES) generated by UNSAT-H.  
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      DATA DOV/3.01/
      WRITE(LUS,9000)
9000  FORMAT(/' Results are based on the use of unverified software.',/,&
     &    ' No assurance is expressed or implied as to the accuracy,',/,&
     &    ' completeness or usefulness of this information.'/)
      CALL WELCOME('DATAOUT',DOV) 
20    WRITE(LUS,6010) 
      READ(LUR,5000) TMFILE
      IF (INDEX(TMFILE(1:1),'0') .GT. 0) STOP
      NCHR = INDEX(TMFILE,' ')
      TMFILE(NCHR:NCHR+3) = '.res'
      OPEN(UNIT=LUI,FILE=TMFILE,STATUS='OLD',FORM='UNFORMATTED',        &
     &     ACCESS='DIRECT',RECL=100,ERR=900)
      READ(LUI,REC=1) NPT,IPLANT,IHEAT
      CLOSE(LUI)
      IRL = IRLMOD*MAX(110,(9*IHEAT+IPLANT+5)*NPT+45)
      OPEN(UNIT=LUI,FILE=TMFILE,STATUS='OLD',FORM='UNFORMATTED',        &
     &     ACCESS='DIRECT',RECL=IRL,ERR=900)
      INQUIRE(UNIT=LUI,NAME=RFILE)
      READ(LUI,REC=1) NPT,IPLANT,IHEAT,(Z(I),I=1,NPT),UV,STOPHR,TSOIL,  &
     &  IFILE,SDATE,STIME,TITLE,IDEND,NPRINT,IEVOPT,NTOTAL,IDBEG,IVAPOR,&
     &  ICLOUD,IETOPT,ISHOPT,UPPER,UPPERH,LOWER,LOWERH,IYEAR
      IF (DOV .NE. UV) THEN
        WRITE(6,45) DOV,UV
        STOP
      ENDIF
45    FORMAT(' ERROR:  DATAOUT Version No. ',F4.2,' does not match',/,  &
     &       '         UNSAT-H Version No. ',F4.2,'.  Program stopped.')
      MAXREC = 3+(IDEND-IDBEG+1)*(1+NTOTAL*NPRINT)-                     &
     &         NINT(NPRINT*NTOTAL*(1-STOPHR/24.))
      DO I=1,MAXREC
        READ(LUI,REC=I,ERR=48)
      ENDDO
48    IF (I-1 .NE. MAXREC) WRITE(LUS,6111) I-1,MAXREC-I+1
      IF (IHEAT .EQ. 0) THEN
         DO I=1,NPT
           T(I) = TSOIL
         ENDDO
      ENDIF
      IREC = 2
      WRITE(LUS,*)
50    WRITE(LUS,6020) 
      READ(LUR,*) IOPT
      IF (IOPT .LT. 1 .OR. IOPT .GT. 6) IOPT = 0
!
!     Call the chosen option
!
      GO TO (999,100,200,300,400,500,600), IOPT+1
100   CALL REINIT
      GO TO 50
200   CALL SCAN
      GO TO 50
300   CALL HARDCOPY
      GO TO 50
400   CALL LISTDATA
      GO TO 50
500   CALL PROFILER
      GO TO 50
600   CLOSE (LUI)
      GO TO 20
900   WRITE(LUS,6040) TMFILE
      GO TO 20
999   STOP ' '
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
5000  FORMAT(A80)
6000  FORMAT(/,                                                         &
     &' Program DATAOUT provides several options for',/,                &
     &' processing the UNSAT-H output file (i.e., a *.res file)'/)
6010  FORMAT(/' Enter output filename without ".res" extension',/,      &
     &' (or "0" to terminate the program) ===> ',$)
6020  FORMAT(' COMMAND LEVEL:  The processing options are...',//,       &
     &'      0) Exit the program',/,                                    &
     &'      1) Reinitialize',/,                                        &
     &'      2) Scan the data',/,                                       &
     &'      3) Create hardcopy output',/,                              &
     &'      4) Create data vs time data files',/,                      &
     &'      5) Create data vs depth data files',/,                     &
     &'      6) Change the current *.res file',//,                      &
     &' Enter the number of your choice ===> ',$)
6040  FORMAT(/' No record of file ',A50,/,                              &
     &' Try again...'/) 
6111  FORMAT(/' CAUTION:  Be advised that this results file contains ', &
     &'only',I5,/,T12,'records, which is',I5,' less than it ',          &
     &'should have.'/)
!-----------------------------------------------------------------------
!     End of program DATAOUT
!-----------------------------------------------------------------------
      END
      SUBROUTINE DDSUM(LJH)
!-----------------------------------------------------------------------
!     Called by HARDCOPY and SCAN
!
!     Calls READREC
!
!     Reads and outputs end-of-DELSUB and end-of-day 
!     summaries for any day of a simulation
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      CALL READREC 
      IF (IERROR .EQ. 1) RETURN
!
!     Output DELSUB/daily summaries
!
      WRITE(LOUT,6000)
      IF (NPRINT .EQ. 0 .OR. LJH .EQ. 1+NTOTAL .OR.                     &
     &    IREC .EQ. MAXREC-1) THEN
        WRITE(LOUT,6090) IDAY,DAYTIM
      ELSE
        WRITE(LOUT,6100) IDAY,HOUR,DAYTIM
      ENDIF
      SSFLUX = DAYINF-DAYE
      TNEW   = TPREV+DAYINF-DAYE-DAYTRA-DAYQL(NPT)
      DAYERR = TNEW-TMOIST
      WRITE(LOUT,6105) (NODE(I),I=1,NDEPTH)
      WRITE(LOUT,6110) (Z(NODE(I)),I=1,NDEPTH)
      WRITE(LOUT,6120) (THETA(NODE(I)),I=1,NDEPTH)
      WRITE(LOUT,6130) (H(NODE(I)),I=1,NDEPTH)
      WRITE(LOUT,6140) (DAYQL(NODE(I)),I=1,NDEPTH)
      IF (IVAPOR .EQ. 1) WRITE(LOUT,6141) (DAYQVH(NODE(I)),I=1,NDEPTH)
      IF (IHEAT .EQ. 1) THEN
        IF (IVAPOR .EQ. 1) WRITE(LOUT,6142) (DAYQVT(NODE(I)),I=1,NDEPTH)
        WRITE(LOUT,6143) (T(NODE(I)),I=1,NDEPTH)
        WRITE(LOUT,6144) (DAYQHC(NODE(I)),I=1,NDEPTH)
      ENDIF
      IF (IPLANT .GT. 0)                                                &
     &  WRITE(LOUT,6150) (DAYSNK(NODE(I)),I=1,NDEPTH)
      WRITE(LOUT,6160)
      WRITE(LOUT,6170) TPREV,DAYINF,DAYRUN,DAYE,                        &
     &  DAYTRA,DAYQL(NPT),TNEW,TMOIST
      WRITE(LOUT,6180) DAYERR,DAYAST,DAYSTP
      IF (IEVOPT .EQ. 1 .AND. IHEAT .EQ. 0) WRITE(LOUT,6190) PE,DAYE
      IF (IPLANT .EQ. 1) WRITE(LOUT,6200) PT,DAYTRA
      IF (IHEAT .EQ. 0) THEN
!
!     RHMEAN converted to percent
!
        IF (IETOPT .EQ. 1) WRITE(LOUT,6181) 100*RHMEAN,TMEAN,HDRY,DAYUBC
      ELSE 
        IF (UPPERH .EQ. 0) WRITE(LOUT,6230) TMAX,TMIN,VD_A,WIND,        &
     &      CLOUD,SR_MEAS
        DAYHBE = DHPREV-HSTORE+DAYSHF                                   &
     &           +(DAYQHW0-DAYQHC(NPT)-DAYQHW(NPT)-DAYQHV(NPT))*10000.0
        WRITE(LOUT,6235) DAYRN,DAYSHF,DAYSEN,DAYLE,DAYQHC(NPT),DAYHBE
      ENDIF
      RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-'))
6090  FORMAT(//' DAILY SUMMARY:  Day =',I4,', Simulated Time = ',       &
     &       F7.4,' hr'/,1X,13('-'))
6100  FORMAT(//' DELSUB SUMMARY:  Day =',I4,', Hour = ',                &
     &       F7.4,', Simulated DELSUB Time = ',F7.4,' hr'/,1X,14('-'))
6105  FORMAT(' Node Number       =',5(I8,4X))
6110  FORMAT(' Depth (cm)        =',5F12.5)
6120  FORMAT(' Water (cm3/cm3)   =',5F12.5)
6130  FORMAT(' Head (cm)         =',5(1PE12.5))
6140  FORMAT(' LiqWater Flow (cm)=',5(1PE12.5))
6141  FORMAT(' IsoVapor Flow (cm)=',5(1PE12.5))
6142  FORMAT(' ThermVap Flow (cm)=',5(1PE12.5))
6143  FORMAT(' Temperature (K)   =',5(1PE12.5))
6144  FORMAT(' Heat Flow (J/cm2) =',5(1PE12.5))
6150  FORMAT(' Plant Sink (cm)   =',5(1PE12.5))
6160  FORMAT(/,T46,'LIQUID',/,                                          &
     &'  PRESTOR',1X,'  INFIL',1X,' RUNOFF  ',1X,' EVAPO ',             &
     &'  TRANS',2X,'  DRAIN',5X,'NEWSTOR',7X,'STORAGE')
6170  FORMAT(F9.4,'+',F7.4,'+',F7.4,1x,'-',                             &
     &       F7.4,'-',F7.4,'-',F8.4,' = ',F9.4,' vs. ',F9.4/)
6180  FORMAT(' Mass Balance = ',1PE11.4,0P,' cm;  Time step attempts',  &
     &    ' =',I5,' and successes =',I5)
6181  FORMAT(' RHMEAN = ',F4.1,' %;  TMEAN = ',F5.1,' K;  HDRY = ',     &
     &    1PE11.4,' cm',0P,';  DAYUBC = ',I5)
6190  FORMAT('   Evaporation:  Potential = ',F7.4,' cm, Actual = ',     &
     &       F7.4,' cm')
6200  FORMAT(' Transpiration:  Potential = ',F7.4,' cm, Actual = ',     &
     &       F7.4,' cm')
6230  FORMAT(' Daily meteorological parameters',/,                      &
     &   T4,'TMAX (K)',T12,' = ',1PE11.4,T31,'TMIN (K)',T39,' = ',E11.4,&
     &   T55,'VD_A (g/cm3)',T67,' = ',E11.4/,                           &
     &   T2,'WIND (m/s)',T12,' = ',E11.4,T27,'CLOUD (frac)',T39,' = ',  &
     &   E11.4,T53,'SR_MEAS (J/m2)',T67,' = ',E11.4)
6235  FORMAT(' Heat flow parameters (units = J/cm2 unless noted)',/,    &
     &    T3,'RN (J/m2)',T12,' = ',1PE11.4,T29,'SHF (J/m2)',T39,' = ',  &
     &    E11.4,T57,'SEN (J/m2)',T67,' = ',E11.4,/,T3,'LE (J/m2)',T12,  &
     &    ' = ',E11.4,T32,'QH(NPT)',T39,' = ',E11.4,                    &
     &    T64,'HBE (J/m2)',T67,' = ',E11.4)
!-----------------------------------------------------------------------
!     End of subroutine DDSUM
!-----------------------------------------------------------------------
      END
      SUBROUTINE INITSUM
!-----------------------------------------------------------------------
!     Called by HARDCOPY and SCAN
!
!     Calls READREC
!
!     Reads an output file (*.RES) and outputs the initial conditions
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
!
!     Read and output the initial conditions
!
      CALL READREC
      IF (IERROR .EQ. 1) RETURN
      WRITE(LOUT,6040) DOV,IFILE,RFILE,SDATE,STIME,TITLE
      WRITE(LOUT,6060)
      WRITE(LOUT,6070) (I,Z(I),H(I),THETA(I),T(I),I=1,NPT)
      WRITE(LOUT,6080) TMOIST
      IF (IPLANT .EQ. 1) WRITE(LOUT,6090)
      RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6040  FORMAT(80('-'),/,T26,' UNSAT-H Version ',F4.2,/,                  &
     &    T27,'INITIAL CONDITIONS',//,                                  &
     &    ' Input File:   ',A65,/,                                      &
     &    ' Results File: ',A65,/,                                      &
     &    ' Date of Run:      ',A11,/,                                  &
     &    ' Time of Run:      ',A11,/,                                  &
     &    ' Title:',/,1X,A79,/,80('-'))
6060  FORMAT(2('                   Initial Conditions   '),/,           &
     &       2('                 -----------------------'),/,           &
     &       2('  NODE   DEPTH      HEAD    THETA  TEMP '),/,           &
     &       2('          (cm)      (cm)   (vol.)   (K) '),/,           &
     &       2('  ---- --------- --------- ------ ------'))
6070  FORMAT(2(I6,1P,2E10.3,0PF7.4,F7.2))
6080  FORMAT(/' Initial Water Storage = ',F8.4,' cm')
6090  FORMAT(/' NOTE:  There are no temperature data when plants are ', &
     &    'modelled.'/)
!-----------------------------------------------------------------------
!     End of subroutine INITSUM
!-----------------------------------------------------------------------
      END
      SUBROUTINE NODEZ(NL)
!-----------------------------------------------------------------------
!     Called by HARDCOPY, LISTDATA, and SCAN
!
!     Allows user to enter node numbers for desired output
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      WRITE(LUS,6050) NL,NL,NPT
      READ(LUR,*) NDEPTH,(NODE(I),I=1,NDEPTH)
      WRITE(LUS,*)
      IF (NDEPTH .LE. 0) THEN
        NDEPTH  = 1
        NODE(1) = 1
      ENDIF
      IF (NDEPTH .GT. NL) NDEPTH = NL
      RETURN
6050  FORMAT(/' Data for up to',I2,' individual nodes can be viewed.',/,&
     &     ' Enter the number of nodes desired (1 to ',I1,') followed'/,&
     &     ' by the node numbers (1 to ',I4,') ===> ',$)
!-----------------------------------------------------------------------
!     End of subroutine NODEZ
!-----------------------------------------------------------------------
      END
      SUBROUTINE SUMMARY
!-----------------------------------------------------------------------
!     Called by HARDCOPY and SCAN
!
!     Reads and outputs the year-end summary data found in the last 
!     record of an UNSATH *.res file
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      READ(LUI,REC=MAXREC,ERR=200) IDAY,G,IPLANT,TPET,TPT,TTRA,TPE,TE,  &
     &  TETRAN,TRUNOF,TINF,TTIM,TRAIN,APLIED,TTIRRI,TMOIST,TERR,        &
     &  TSTP,TAST,TUBC,TRN,TSHF,TSEN,TLE,THBE,TSDH,THPREV,HSTORE,       &
     &  (TQL(I),TQVH(I),TQVT(I),TQHC(I),TSNK(I),I=1,NPT),TQHW0,         &
     &  TQHW(NPT),HSOURCE,OSMPOT
      WRITE(LOUT,6000) DOV,TITLE,IPLANT,TPET,TPT,TTRA,TPE,TE,TETRAN,    &
     &  TRUNOF,TINF,TQL(NPT),TQVT(NPT),APLIED,TRAIN,TTIRRI,TMOIST
      WRITE(LOUT,6005) TERR,TSTP,TAST,TSDH,TUBC,TTIM
!
!     TQHC(NPT) are converted from J/cm2 to J/m2
!
      IF (IHEAT .EQ. 1) THEN
        WRITE(LOUT,6010) TRN,TSHF,TSEN,TQHC(NPT)*1.D4,TLE,THBE,         &
     &  TQHW0*1.D4,TQHW(NPT)*1.D4
!        WRITE(LOUT,6011) HSOURCE,OSMPOT
      ENDIF
      SFLOW  = TINF-TE
!
!     Convert TSHF (J/m2) to SHFLOW (J/cm2)
!
      SHFLOW = TSHF*1.D-4
      WRITE(LOUT,6020) TTIM
      WRITE(LOUT,6030) Z(1),SFLOW,(0.5*(Z(I)+Z(I+1)),TQL(I),I=1,NPT-1), &
     &  Z(NPT),TQL(NPT)
      IF (IPLANT .EQ. 1) THEN
        WRITE(LOUT,6022)
        WRITE(LOUT,6030) (Z(I),TSNK(I),I=1,NPT)
      ENDIF
      IF (IHEAT .EQ. 1) THEN
        WRITE(LOUT,6025)
        WRITE(LOUT,6030) Z(1),SHFLOW,(0.5*(Z(I)+Z(I+1)),TQHC(I),        &
     &    I=1,NPT-1),Z(NPT),TQHC(NPT)
      ENDIF
100   RETURN
200   WRITE(LUS,6040) MAXREC
      GO TO 100
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-'),/,T30,'UNSAT-H Version ',F4.2,/,                  &
     & T30,' SIMULATION SUMMARY',//,' Title:',/,1X,A79,/,80('-'),//,    &
     & ' Transpiration Scheme is:           = ',I4,/,                   &
     & ' Potential Evapotranspiration       = ',1PE11.4,T55,'[cm]',/,   &
     & ' Potential Transpiration            = ',E11.4,T55,'[cm]',/,     &
     & ' Actual Transpiration               = ',E11.4,T55,'[cm]',/,     &
     & ' Potential Evaporation              = ',E11.4,T55,'[cm]',/,     &
     & ' Actual Evaporation                 = ',E11.4,T55,'[cm]',/,     &
     & ' Evaporation during Growth          = ',E11.4,T55,'[cm]',/,     &
     & ' Total Runoff                       = ',E11.4,T55,'[cm]',/,     &
     & ' Total Infiltration                 = ',E11.4,T55,'[cm]',/,     &
     & ' Total Basal Liquid Flux (drainage) = ',E11.4,T55,'[cm]',/,     &
     & ' Total Basal Vapor Flux (temp-grad) = ',E11.4,T55,'[cm]',/,     &
     & ' Total Applied Water                = ',E11.4,T55,'[cm]',/,     &
     & ' Actual Rainfall                    = ',E11.4,T55,'[cm]',/,     &
     & ' Actual Irrigation                  = ',E11.4,T55,'[cm]',/,     &
     & ' Total Final Moisture Storage       = ',E11.4,T55,'[cm]')
6005  FORMAT(' Mass Balance Error                 = ',1PE11.4,T55,      &
     &  '[cm]',/,' Total Successful Time Steps        = ',I9,/,         &
     & ' Total Attempted Time Steps         = ',I9,/,                   &
     & ' Total Time Step Reductions (DHMAX) = ',I9,/,                   &
     & ' Total Changes in Surface Boundary  = ',I9,/,                   &
     & ' Total Time Actually Simulated      = ',E11.4,T55,'[days]')
6010  FORMAT(                                                           &
     & ' Total Net Radiation                = ',1PE11.4,T55,'[J/m2]',/, &
     & ' Total Soil-Surface Heat Flow       = ',E11.4,T55,'[J/m2]',/,   &
     & ' Total Sensible Heat Flow           = ',E11.4,T55,'[J/m2]',/,   &
     & ' Total Bottom Heat Flow             = ',E11.4,T55,'[J/m2]',/,   &
     & ' Total Latent Heat Flow             = ',E11.4,T55,'[J/m2]',/,   &
     & ' Heat Balance Error                 = ',E11.4,T55,'[J/m2]',/,   &
     & ' Total Convected Heat in Infilt.    = ',E11.4,T55,'[J/m2]',/,   &
     & ' Total Convected Heat in Drainage   = ',E11.4,T55,'[J/m2]')
6011  FORMAT(                                                           &
     & ' Heat Source (HSOURCE)              = ',E11.4,T55,              &
     & '[W/(m^3 K)]',/,                                                 &
     & ' Osmotic Potential (OSMPOT)         = ',E11.4,T55,'[cm]')
6020  FORMAT(///' Total liquid water flow (cm) across different depths',&
     & ' at the end of',1PE11.4,' days:',//,                            &
     & 3(3X,' DEPTH  ',3X,'    FLOW   '),/,                             &
     & 3(3X,'--------',3X,'-----------'))
6022  FORMAT(///,                                                       &
     & ' Total plant water uptake (cm) at different depths:',//,        &
     & 3(6X,'DEPTH',2X,'WATER UPTAKE'),/,                               &
     & 3(6X,'-----',2X,'------------'))
6025  FORMAT(///' Total heat flow (J/cm2) across different depths:',//, &
     & 3(3X,' DEPTH  ',3X,'    FLOW   '),/,                             &
     & 3(3X,'--------',3X,'-----------'))
6030  FORMAT(3(3X,0P,F8.3,1P,E14.4))
6040  FORMAT(/' The end-of-year summary record (',I5,') could not',     &
     & ' be read.  SUMMARY aborted.',/)
!-----------------------------------------------------------------------
!     End of subroutine SUMMARY
!-----------------------------------------------------------------------
      END
      SUBROUTINE SCAN
!-----------------------------------------------------------------------
!     Called by DATAOUT
!
!     Calls INITSUM, DDSUM, NODEZ, and SUMMARY
!
!     Displays on the screen the end-of-DELSUB and end-of-day 
!     summaries for any day of a simulation, including the initial 
!     conditions and the simulation-end summary
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      LOUT = LUS
      WRITE(LUS,6000)
      WRITE(LUS,6010)
      CALL NODEZ(5)
      ID = 1
      IF (IDEND .GT. 9)  ID = 2
      IF (IDEND .GT. 99) ID = 3
!
!     Choose a day for scanning
!
120   WRITE(LUS,6020) IDBEG,IDEND,IDEND+1
      READ(LUR,*) JDAY
      IF (JDAY .LE. -1) GO TO 200
      IF (JDAY .GT. IDEND+1) THEN
        WRITE(LUS,6030) JDAY,IDEND+1
        GO TO 120
      ENDIF
!
!     Output simulation-end summary
!
      IF (JDAY .EQ. IDEND+1) THEN
        IREC = MAXREC
        CALL SUMMARY
        WRITE(LUS,6000)
        GO TO 120
      ENDIF
!
!     Choose a DELSUB period for scanning
!
      IF (NPRINT .EQ. 1 .AND. JDAY .NE. 0) THEN
        LESS = 0
        IF (JDAY .EQ. IDEND) LESS = NTOTAL-NTOTAL*STOPHR/24.
130     WRITE(LUS,6040) NTOTAL-LESS,1+NTOTAL-LESS
        READ(LUR,*) LJH
        IF (LJH .LT. 1 .OR. LJH .GT. 1+NTOTAL-LESS) THEN
          WRITE(LUS,6250) LJH
          GO TO 130
        ENDIF
      ENDIF
      KDAY = JDAY-IDBEG+1
      IREC = 2+KDAY+(LJH+(KDAY-1)*NTOTAL-1)*NPRINT
      IF (JDAY .EQ. 0) IREC = 2
!
!     Output the initial conditions
!
      IF (IREC .EQ. 2) THEN
        CALL INITSUM
        IF (IERROR .EQ. 1) GO TO 120
        WRITE(LUS,6000)
        GO TO 120
      ENDIF
!
!     Output DELSUB/daily summaries
!
      CALL DDSUM(LJH)
      IF (IERROR .EQ. 1) GO TO 120
      WRITE(LUS,6260)
      READ(LUR,*)
      WRITE(LUS,*)
      GO TO 120
200   WRITE(LUS,6000)
      RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-')/)
6010  FORMAT(' SCAN (Option No. 2)'/)
6020  FORMAT(' The SCAN options are:',/,                                &
     &       '            -1) Return to DATAOUT command level',/,       &
     &       '             0) Look at the initial conditions',/,        &
     &     '    ',I3,' to ',I3,') Look at the end-of-day summary for',  &
     &                           ' chosen day',/,                       &
     &      '           ',I3,') Look at the end-of-year summary',//,    &
     &       ' Enter the desired option ===> ',$)
6030  FORMAT(/' The chosen day (',I3,') is greater than IDEND+1 (',     &
     &        I3,').  Try again...'/)
6040  FORMAT(/' This file contains data for DELSUB (time) periods.',/,  &
     &        ' The options are:',//,                                   &
     &       T6,'1 to',I5,T15,') summary of the chosen time period',/,  &
     &       T10,I5,T15,') overall summary of the chosen day',//,       &
     &        ' Enter the desired choice ===> ',$)
6250  FORMAT(/' Option ',I5,' does not exist.  Try again...'/)
6260  FORMAT(80('-')/' Press <RTN> to get SCAN options ===> ',$)
!-----------------------------------------------------------------------
!     End of subroutine SCAN
!-----------------------------------------------------------------------
      END
      SUBROUTINE REINIT
!-----------------------------------------------------------------------
!     Called by DATAOUT 
!
!     Calls READREC
!
!     Reads the *.RES output file from UNSAT-H and outputs a file 
!     (toss.out) with the head values for the end of the chosen time
!     period.  If IHEAT = 1, then the temperature values for the end
!     of the chosen time period are also output.
!     The toss.out file can serve as the initial conditions 
!     for a new simulation.
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      LOUT = LUW
      ID = 1
      IF (IDEND .GT. 9)  ID = 2
      IF (IDEND .GT. 99) ID = 3
      WRITE(LUS,6000)
      WRITE(LUS,6010)
120   WRITE(LUS,6020) IDBEG,IDEND 
      READ(LUR,*) JDAY
      IF (JDAY .LE. -1) THEN
        WRITE(LUS,6000) 
        GO TO 100
      ELSE IF (JDAY .EQ. 0) THEN
        IREC = 2
        GO TO 140
      ELSE 
        IF (JDAY .LT. IDBEG .OR. JDAY .GT. IDEND) THEN
          WRITE(LUS,6030) JDAY
          GO TO 120
        ENDIF
      ENDIF
!
!     Choose a DELSUB period for scanning
!
      IF (NPRINT .EQ. 1) THEN
        LESS = 0
        IF (JDAY .EQ. IDEND) LESS = NTOTAL-NTOTAL*STOPHR/24.
130     WRITE(LUS,6040) 24./NTOTAL,NTOTAL-LESS,1+NTOTAL-LESS
        READ(LUR,*) LJH
        IF (LJH .LT. 1 .OR. LJH .GT. 1+NTOTAL-LESS) THEN
          WRITE(LUS,6050) LJH
          GO TO 130
        ENDIF
      ENDIF
!
!     Read the results file 
!
      KDAY = JDAY-IDBEG+1
      IREC = 2+KDAY+(LJH+(KDAY-1)*NTOTAL-1)*NPRINT
140   CALL READREC
      IF (IERROR .EQ. 1) THEN
        WRITE(LUS,6060)
        GO TO 120
      ENDIF
      TIME = JDAY-1+HOUR/24.D0
      NDAY = JDAY
      IF (NDAY .EQ. IDEND) NDAY = 0
!
!     Output the head values to the TOSS.OUT file
!
      OPEN (UNIT=LOUT,FILE='toss.out',STATUS='UNKNOWN')
      CLOSE(UNIT=LOUT,STATUS='DELETE')
      OPEN (UNIT=LOUT,FILE='toss.out',STATUS='NEW')
      WRITE(LUW,6070) NDAY,TIME,DOV,(H(I),I=1,NPT)
      IF (IHEAT .EQ. 1) WRITE(LUW,6075) (T(I),I=1,NPT)
      WRITE(LUS,6080) TIME,NDAY
      WRITE(LUS,6000)
      CLOSE (LOUT)
100   RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-')/)
6010  FORMAT(' REINIT (Option No. 1)'/)
6020  FORMAT(' The REINIT options are:',/,                              &
     &'            -1) return to DATAOUT command level',/,              &
     &'             0) reinitialize initial conditions',/,              &
     &'    ',I3,' to ',I3,') reinitialize on the chosen day',//,        &
     &' Enter the desired option ===> ',$)
6030  FORMAT(/' The chosen day (',I3,') is not an option.',             &
     &    ' Try again...',/)
6040  FORMAT(//' This file contains data for each DELSUB period',       &
     &    ' (',F7.5,' hours per period).',/,' The options are:',/,      &
     &    T6,'1 to',I5,T15,') solution at the end of the',              &
     &    ' chosen DELSUB (time) period',/,                             &
     &    T10,I5,T15,') solution at the end of the chosen day',//,      &
     &    ' Enter the desired choice ===> ',$)
6050  FORMAT(/' Option ',I5,' does not exist.  Try again...',/)
6060  FORMAT(/' The chosen day (',I3,') is not available.  ',/,         &
     &    ' Try again...'/)
6070  FORMAT(I5,', NDAY (toss.out file for day ',1PE12.5,')',           &
     &' Ver '0PF4.2,/,1P(4(E14.7,",")))
6075  FORMAT(1P(4(E14.7,",")))
6080  FORMAT(/' The initialized values are for the end of day',1PE12.5, &
     &    '.',/,' File toss.out was created with NDAY set to ',I3,'.')
!-----------------------------------------------------------------------
!     End of subroutine REINIT
!-----------------------------------------------------------------------
      END
      SUBROUTINE READREC
!-----------------------------------------------------------------------
!     Called by DDSUM, INITSUM, LISTDATA, PROFILER, and REINIT
!
!     Reads the *.RES file (from UNSATH), either DELSUB or daily
!     summary records
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      IERROR = 0
      IF (IPLANT .EQ. 0) THEN
        IF (IHEAT .EQ. 0) THEN
          READ(LUI,REC=IREC,ERR=200) IDAY,HOUR,(H(J),THETA(J),DAYQL(J), &
     &      DAYQVH(J),J=1,NPT),DAYINF,DAYRAN,DAYE,DAYTRA,DAYRUN,        &
     &      TPREV,TMOIST,DAYSTP,PE,PT,DAYTIM,DAYAST,DAYUBC,RHMEAN,      &
     &      TMEAN,HDRY,DAYRN,DAYSHF,DAYSEN,DHPREV,HSTORE,DAYQHW0,       &
     &      TA,TMAX,TMIN,VD_A,WIND,CLOUD,SR_MEAS,DAYLE,DAYSDH,DAYHBE
        ELSE
          READ(LUI,REC=IREC,ERR=200) IDAY,HOUR,(H(J),THETA(J),DAYQL(J), &
     &      DAYQVH(J),DAYQVT(J),T(J),J=1,NPT),                          &
     &      DAYINF,DAYRAN,DAYE,DAYTRA,DAYRUN,                           &
     &      TPREV,TMOIST,DAYSTP,PE,PT,DAYTIM,DAYAST,DAYUBC,RHMEAN,      &
     &      TMEAN,HDRY,DAYRN,DAYSHF,DAYSEN,DHPREV,HSTORE,DAYQHW0,       &
     &      TA,TMAX,TMIN,VD_A,WIND,CLOUD,SR_MEAS,DAYLE,DAYSDH,DAYHBE,   &
     &      (DAYQHC(J),DAYQHW(J),DAYQHV(J),J=1,NPT)
        ENDIF
      ELSE
        READ(LUI,REC=IREC,ERR=200) IDAY,HOUR,(H(J),THETA(J),DAYQL(J),   &
     &    DAYQVH(J),DAYSNK(J),J=1,NPT),DAYINF,DAYRAN,DAYE,DAYTRA,DAYRUN,&
     &    TPREV,TMOIST,DAYSTP,PE,PT,DAYTIM,DAYAST,DAYUBC,RHMEAN,        &
     &    TMEAN,HDRY,DAYSDH
      ENDIF
100   RETURN
200   WRITE(LUS,6000) IREC
      IERROR = 1
      GO TO 100
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/' Record No. ',I5,' could not be read'/)
!-----------------------------------------------------------------------
!     End of subroutine READREC
!-----------------------------------------------------------------------
      END
      SUBROUTINE PROFILER
!-----------------------------------------------------------------------
!     Called by DATAOUT 
!
!     Calls READREC
!
!     Creates data (e.g., water content, head) vs depth data lists 
!     that can be output to a screen or a separate file
!     to be used for plotting purposes.
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      DIMENSION HEAD(6,M1),WATCONT(6,M1),TIME(6),WFLOW(6,M1),           &
     &  TEMP(6,M1),HFLOW(6,M1),FZ(M1),UPTAKE(6,M1),VHFLOW(6,M1),        &
     &  VTFLOW(6,M1)
      INTEGER JDAY(6),ND(6)
      DO I=1,NPT-1
        FZ(I) = (Z(I+1)+Z(I))/2
      ENDDO
      FZ(NPT) = Z(NPT)
      WRITE(LUS,6000)
      WRITE(LUS,6010)
120   IOUT = 0
      LOUT = LUS
      WRITE(LUS,6020)
      IF (IPLANT .EQ. 1) THEN
        WRITE(LUS,6021)
      ELSE
        WRITE(LUS,60211)
      ENDIF
      IF (IVAPOR .EQ. 1) THEN
        WRITE(LUS,6022)
      ELSE
        WRITE(LUS,60221)
      ENDIF
      IF (IHEAT .EQ. 1) THEN
        IF (IVAPOR .EQ. 1) THEN
          WRITE(LUS,6023)
        ELSE
          WRITE(LUS,60231)
        ENDIF
        WRITE(LUS,6024)
      ENDIF
      WRITE(LUS,6025)
      READ(LUR,*) VOUT
      IF (VOUT .LE. 0) GO TO 200
      WRITE(LUS,6030) IDBEG-1,IDEND
      IF (NPRINT .EQ. 0) THEN
        IOPT = 1
      ELSE
        WRITE(LUS,6040) 
        READ(LUR,*) IOPT
      ENDIF
      ND(1) = NTOTAL
      NDELSUB = NTOTAL*STOPHR/24.D0
      IF (IOPT .EQ. 1) THEN
!
!     Choose the days for scanning
!
        WRITE(LUS,6070)
        READ(LUR,*) NUMDAY,(JDAY(I),I=1,NUMDAY)
      ELSE
!
!     Choose the DELSUB periods for scanning
!
        NUMDAY = 1 
        WRITE(LUS,6080) NTOTAL,24.D0/NTOTAL
        IF (STOPHR .LT. 24) WRITE(LUS,6090) IDEND,NDELSUB,STOPHR
        WRITE(LUS,6100) 
        READ(LUR,*) JDAY(1),NUMDEL,(ND(I),I=1,NUMDEL)
      ENDIF
!
!     Choose the output device (screen or file)
!
      WRITE(LUS,6110)
      READ(LUR,*) IOUT
      LOUT = LUS
      IF (IOUT .EQ. 1) THEN
        LOUT = LUW
        WRITE(LUS,6111)
        READ(LUR,'(A)') OFILE
        OPEN (UNIT=LOUT,FILE=OFILE,STATUS='UNKNOWN')
        CLOSE(UNIT=LOUT,STATUS='DELETE')
        OPEN(UNIT=LOUT,FILE=OFILE,STATUS='NEW')
        INQUIRE(UNIT=LOUT,NAME=OFILE)
      ENDIF
!
!     Fill the arrays
!
      IF (IOPT .EQ. 1) THEN
        NUMBER = NUMDAY
      ELSE
        NUMBER = NUMDEL
      ENDIF
      DO I=1,NUMBER
        IF (IOPT .EQ. 1) THEN
          ND(I) = NTOTAL+1
          IF (JDAY(I) .EQ. IDEND) ND(I) = NDELSUB+1
        ELSE
          JDAY(I) = JDAY(1)
        ENDIF
        KDAY = JDAY(I)-IDBEG+1
        IREC = 2+KDAY+(ND(I)+(KDAY-1)*NTOTAL-1)*NPRINT
        CALL READREC
        TIME(I) = IDAY-1+HOUR/24.D0
        DO J=1,NPT
          IF (VOUT .EQ. 1) HEAD(I,J)    = H(J)
          IF (VOUT .EQ. 2) WATCONT(I,J) = THETA(J)
          IF (VOUT .EQ. 3) WFLOW(I,J)   = DAYQL(J)
          IF (VOUT .EQ. 4) UPTAKE(I,J)  = DAYSNK(J)
          IF (VOUT .EQ. 5) VHFLOW(I,J)  = DAYQVH(J)
          IF (VOUT .EQ. 6) VTFLOW(I,J)  = DAYQVT(J)
          IF (VOUT .EQ. 7) TEMP(I,J)    = T(J)
          IF (VOUT .EQ. 8) HFLOW(I,J)   = DAYQHC(J)
        ENDDO
      ENDDO
!
!     Output the node number, depth, and array contents
!
      IF (IOUT .EQ. 0) WRITE(LUS,*)
      IF (LOUT .EQ. LUW) WRITE(LOUT,6115) DOV,IFILE,RFILE,SDATE,STIME
      IF (VOUT .EQ. 1) THEN
        WRITE(LOUT,6120) 
      ELSE IF (VOUT .EQ. 2) THEN
        WRITE(LOUT,6130) 
      ELSE IF (VOUT .EQ. 3) THEN
        WRITE(LOUT,6131)
      ELSE IF (VOUT .EQ. 4) THEN
        WRITE(LOUT,6136)
      ELSE IF (VOUT .EQ. 5) THEN
        WRITE(LOUT,6133) 
      ELSE IF (VOUT .EQ. 6) THEN
        WRITE(LOUT,6137)
      ELSE IF (VOUT .EQ. 7) THEN
        WRITE(LOUT,6132)
      ELSE IF (VOUT .EQ. 8) THEN
        WRITE(LOUT,6134)
      ENDIF
      WRITE(LOUT,6138) (TIME(I),I=1,NUMBER)
      WRITE(LOUT,6139)
      DO J=1,NPT
        IF (VOUT .EQ. 1) THEN
          WRITE(LOUT,6150) J,Z(J),(HEAD(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 2) THEN
          WRITE(LOUT,6140) J,Z(J),(WATCONT(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 3) THEN
          WRITE(LOUT,6150) J,FZ(J),(WFLOW(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 4) THEN
          WRITE(LOUT,6150) J,Z(J),(UPTAKE(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 5) THEN
          WRITE(LOUT,6150) J,Z(J),(VHFLOW(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 6) THEN
          WRITE(LOUT,6150) J,Z(J),(VTFLOW(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 7) THEN
          WRITE(LOUT,6150) J,Z(J),(TEMP(I,J),I=1,NUMBER)
        ELSE IF (VOUT .EQ. 8) THEN
          WRITE(LOUT,6150) J,FZ(J),(HFLOW(I,J),I=1,NUMBER)
        ENDIF
      ENDDO
      IF (IOUT .EQ. 1) THEN
        WRITE(LUS,6160) OFILE
        CLOSE (LOUT)
      ENDIF
      WRITE(LUS,6000)
      GO TO 120
200   WRITE(LUS,6000)
      RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-')/)
6010  FORMAT(' PROFILER (Option No. 5)',/)
6020  FORMAT(' The PROFILER output options are:',/,                     &
     &T13,' 0) return to DATAOUT command level',/,                      &
     &T13,' 1) output head vs depth',/,                                 &
     &T13,' 2) output water content vs depth',/,                        &
     &T13,' 3) output liquid water flow between nodes')
6021  FORMAT(T13,' 4) output plant water uptake amounts vs depth')
60211 FORMAT(T13,' 4) (plant option unavailable)')
6022  FORMAT(T13,' 5) output isothermal water vapor flow between nodes')
60221 FORMAT(T13,' 5) (isothermal vapor option unavailable)')
6023  FORMAT(T13,' 6) output thermal water vapor flow between nodes')
60231 FORMAT(T13,' 6) (thermal vapor option unavailable)')
6024  FORMAT(T13,' 7) output soil temperature vs depth',/,              &
     &T13,' 8) output conductive heat flow amount between nodes')
6025  FORMAT(/' Enter PROFILER option ===> ',$)
6030  FORMAT(//' The days of the year available for viewing are'/,      &
     &        ' days ',I3,' through ',I3)
6040  FORMAT(/' The temporal options are:'/,                            &
     &        '             1) end-of-day data for up to 6 days'/,      &
     &        '             2) end-of-DELSUB data for 1 day for up'/,   &
     &        '                to 6 DELSUB periods'//,                  &
     &        ' Enter temporal option ===> ',$)
6070  FORMAT(//' Enter the number of days for viewing (up to 6)'/,      &
     &        ' followed by a list of the desired days ===> ',$)
6080  FORMAT(/' There are ',I5,' DELSUB periods (',F8.5,' hours each)', &
     &        ' per day.')
6090  FORMAT(' NOTE:  On the last day (day ',I3,') of this run, there', &
     &       ' are only',/,I9,' DELSUB periods (total simulated',       &
     &       ' time = ',F8.5,' hours)')
6100  FORMAT(/' Enter the simulation day, the number of DELSUB '/,      &
     &        ' periods for that day, followed by a list'/,             &
     &        ' of the periods (up to 6) ===> ',$)
6110  FORMAT(//' The output options are:'/,                             &
     &        '             0) screen or'/,                             &
     &        '             1) file'//,                                 &
     &        ' Enter output option ===> ',$)
6111  FORMAT(/' Enter output file name ===> ',$)
6115  FORMAT(' UNSAT-H Version ',F4.2,/,                                &
     &       ' Input File:   ',A65,/,                                   &
     &       ' Results File: ',A65,/,                                   &
     &       ' Date of Run:      ',A11,/,                               &
     &       ' Time of Run:      ',A11,/)
6120  FORMAT(T32,' HEAD (cm)')
6130  FORMAT(T32,' WATER CONTENTS (cm3/cm3)')
6131  FORMAT(T32,' LIQUID WATER FLOW AMOUNT (cm)')
6133  FORMAT(T32,' ISOTHERMAL VAPOR FLOW AMOUNT (cm)')
6132  FORMAT(T32,' SOIL TEMPERATURE (K)')
6137  FORMAT(T32,' THERMAL VAPOR FLOW AMOUNT (cm)')
6134  FORMAT(T32,' CONDUCTIVE SOIL HEAT FLOW (J/cm2)')
6136  FORMAT(T32,' PLANT WATER UPTAKE (cm)')
6138  FORMAT(T15,66('-'),/,                                             &
     &       ' Node   Depth',T35,'    Simulation Day',/,                &
     &       '  No.    (cm)',1X,6(F11.5))
6139  FORMAT('-----   -----',1X,6(' ----------'))
6140  FORMAT(I5,F8.2,1X,6F11.6)
6150  FORMAT(I5,F8.2,1X,1P,6E11.4)
6160  FORMAT(/' PROFILER output can be found in'/,                      &
     &    ' file ===> ',A60)
!-----------------------------------------------------------------------
!     End of subroutine PROFILER
!-----------------------------------------------------------------------
      END
      SUBROUTINE LISTDATA
!-----------------------------------------------------------------------
!     Called by DATAOUT
!
!     Calls NODEZ and READREC
!
!     Creates data lists, such as head values at the end of each day, 
!     for review on the screen or for output to a separate file to be 
!     used for plotting purposes.
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      DIMENSION FZ(M1)
      DO I=1,NPT-1
        FZ(I) = (Z(I+1)+Z(I))/2
      ENDDO
      FZ(NPT) = Z(NPT)
      WRITE(LUS,6000)
      WRITE(LUS,6010)
!
!     Choose UNSAT-H variable for output
!
100   NOUT = 1
      LOUT = LUS
      WRITE(LUS,6020)
      IF (IPLANT  .EQ. 1) THEN
        WRITE(LUS,6021)
      ELSE
        WRITE(LUS,60211)
      ENDIF
      IF (IVAPOR .EQ. 1) THEN
        WRITE(LUS,6022)
      ELSE
        WRITE(LUS,60221)
      ENDIF
      IF (IHEAT .EQ. 1) THEN
        IF (IVAPOR .EQ. 1) THEN
          WRITE(LUS,6023)
        ELSE
          WRITE(LUS,60231)
        ENDIF
        WRITE(LUS,6024)
      ENDIF
      WRITE(LUS,6025)
      READ(LUR,*) CHOICE
      IF (CHOICE .LE. 0) GO TO 200
!
!     Option to reduce output for CHOICE 4 (infil. rate)
!
      IF (NPRINT .EQ. 1 .AND. CHOICE .EQ. 4) THEN
        WRITE(LUS,6030) NTOTAL
        READ(LUR,*) NOUT
        IF (NOUT .LT. 1) NOUT = 1
        IF (NOUT .GT. NTOTAL) NOUT = NTOTAL
        ICOUNT = 1
      ENDIF
!
!     Choose output device option, either screen or file
!
      WRITE(LUS,6040)
      READ(LUR,*) IOUT
      IF (IOUT .EQ. 1) THEN
        LOUT = LUW
        WRITE(LUS,6050)
        READ(LUR,'(A)') OFILE
        OPEN (UNIT=LOUT,FILE=OFILE,STATUS='UNKNOWN')
        CLOSE(UNIT=LOUT,STATUS='DELETE')
        OPEN(UNIT=LOUT,FILE=OFILE,STATUS='NEW')
        INQUIRE(UNIT=LOUT,NAME=OFILE)
      ENDIF
      IF (LOUT .EQ. LUW) WRITE(LOUT,6060) DOV,IFILE,RFILE,SDATE,STIME
      IF (CHOICE .EQ. 1) THEN
        CALL NODEZ(6)
        WRITE(LOUT,6061)
        WRITE(LOUT,6069)
        WRITE(LOUT,6070) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (Z(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 2) THEN
        CALL NODEZ(6)
        WRITE(LOUT,6062)
        WRITE(LOUT,6069)
        WRITE(LOUT,6070) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (Z(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 3) THEN
        CALL NODEZ(6)
        WRITE(LOUT,6063)
        WRITE(LOUT,6069)
        WRITE(LOUT,6071) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (FZ(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 4) THEN
        WRITE(LOUT,6080)
        CUMINF = 0.0
        RATINF = 0.0
        PDAY   = IDBEG-1
      ELSE IF (CHOICE .EQ. 5) THEN
        WRITE(LOUT,6082)
      ELSE IF (CHOICE .EQ. 6) THEN
        WRITE(LOUT,6085)
      ELSE IF (CHOICE .EQ. 7) THEN
        WRITE(LOUT,6130)
      ELSE IF (CHOICE .EQ. 8) THEN
        CALL NODEZ(6)
        WRITE(LOUT,6062)
        WRITE(LOUT,6069)
        WRITE(LOUT,6070) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (FZ(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 9) THEN
        CALL NODEZ(6)
        WRITE(LOUT,7063)
        WRITE(LOUT,6069)
        WRITE(LOUT,6071) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (FZ(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 10) THEN
        CALL NODEZ(6)
        WRITE(LOUT,7163)
        WRITE(LOUT,6069)
        WRITE(LOUT,6071) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (FZ(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 11) THEN
        IF (UPPERH .EQ. 0) THEN
          CALL NODEZ(5)
          WRITE(LOUT,6072)
          WRITE(LOUT,6074)
          WRITE(LOUT,6076) (NODE(I),I=1,NDEPTH)
          WRITE(LOUT,6077) (Z(NODE(I)),I=1,NDEPTH)
        ELSE
          CALL NODEZ(6)
          WRITE(LOUT,6064)
          WRITE(LOUT,6069)
          WRITE(LOUT,6070) (NODE(I),I=1,NDEPTH)
          WRITE(LOUT,6078) (Z(NODE(I)),I=1,NDEPTH)
        ENDIF
      ELSE IF (CHOICE .EQ. 12) THEN
        CALL NODEZ(6)
        WRITE(LOUT,6065)
        WRITE(LOUT,6069)
        WRITE(LOUT,6071) (NODE(I),I=1,NDEPTH)
        WRITE(LOUT,6078) (FZ(NODE(I)),I=1,NDEPTH)
      ELSE IF (CHOICE .EQ. 13) THEN
        WRITE(LOUT,6140)
      ELSE
        WRITE(LOUT,*) ' There is no choice ',CHOICE
        WRITE(LOUT,*) ' The available choices are 1 to 13.  Try again'
        GO TO 100
      ENDIF
      IDAY = 0
      HOUR = 0.0
!
!     Read variables and write to screen or file
!
      DO IREC=2,MAXREC-1
        IF (IREC .GT. 2 .AND. NPRINT .EQ. 1) THEN
          IF (IREC .EQ. (2+(IDAY-IDBEG+1)*(NTOTAL+1))) GO TO 130
          IF (IDAY .EQ. IDEND .AND. IREC .EQ. MAXREC-1) GO TO 130
        ENDIF
        CALL READREC
        IF (IERROR .EQ. 1) GO TO 135
        DAY = IDAY-1.0+HOUR/24.D0
        IF (IDAY .EQ. 0) DAY = 0.D0
        IF (CHOICE .EQ. 1) THEN
          WRITE(LOUT,6090) DAY,(H(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 2) THEN
          WRITE(LOUT,6100) DAY,(THETA(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 3) THEN
          WRITE(LOUT,6090) DAY,(DAYQL(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 4) THEN
          IF (DAYTIM .GT. 0) RATINF = DAYINF/DAYTIM
          CUMINF = CUMINF+DAYINF
          RATTIM = (DAY+PDAY)/2.D0
          PDAY = DAY
          IF (ICOUNT .EQ. NOUT) THEN
            WRITE(LOUT,6090) RATTIM,RATINF,DAY,CUMINF
            ICOUNT = 0
          ENDIF
          ICOUNT = ICOUNT+1
        ELSE IF (CHOICE .EQ. 5) THEN
          WRITE(LOUT,6112) DAY,DAYTIM,DAYSTP,DAYAST,DAYSDH,DAYUBC
        ELSE IF (CHOICE .EQ. 6) THEN
          WRITE(LOUT,6090) DAY,TMOIST
        ELSE IF (CHOICE .EQ. 7) THEN
          WRITE(LOUT,6090) DAY,DAYRAN,DAYINF,DAYE,DAYTRA,DAYQL(NPT),    &
     &        TPREV-TMOIST+DAYINF-DAYE-DAYTRA-DAYQL(NPT)
        ELSE IF (CHOICE .EQ. 8) THEN
          WRITE(LOUT,6090) DAY,(DAYSNK(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 9) THEN
          WRITE(LOUT,6090) DAY,(DAYQVH(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 10) THEN
          WRITE(LOUT,6090) DAY,(DAYQVT(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 11) THEN
          IF (UPPERH .EQ. 0) THEN
            WRITE(LOUT,6090) DAY,TA,(T(NODE(I)),I=1,NDEPTH)
          ELSE
            WRITE(LOUT,6090) DAY,(T(NODE(I)),I=1,NDEPTH)
          ENDIF
        ELSE IF (CHOICE .EQ. 12) THEN
          WRITE(LOUT,6090) DAY,(DAYQHC(NODE(I)),I=1,NDEPTH)
        ELSE IF (CHOICE .EQ. 13) THEN
!
!     DAYQHC(NPT) converted from J/cm2 to J/m2 for output
!
        DAYHBE = DHPREV-HSTORE+DAYSHF                                   &
     &           +(DAYQHW0-DAYQHC(NPT)-DAYQHW(NPT)-DAYQHV(NPT))*10000.0
          WRITE(LOUT,6090) DAY,DAYRN,DAYSEN,DAYLE,DAYSHF,               &
     &        DAYQHC(NPT)*1.D4,DAYHBE
        ENDIF
130     CONTINUE
      ENDDO
135   IF (IOUT .EQ. 0) THEN
        WRITE(LUS,6260)
        READ(LUR,*)
        WRITE(LUS,*)
        WRITE(LUS,6000)
        GO TO 100
      ELSE
        WRITE(LUS,6120) OFILE
        CLOSE (LOUT,STATUS='KEEP')
      ENDIF
200   WRITE(LUS,6000)
      RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-')/)
6010  FORMAT(' LISTDATA (Option No. 4)',/)
6020  FORMAT(' The LISTDATA options are:',/,                            &
     &T13,' 0) Return to DATAOUT command level',/,                      &
     &T13,' 1) Look at H (head) values',/,                              &
     &T13,' 2) Look at THETA (water content) values',/,                 &
     &T13,' 3) Look at QL (liquid water flow) values',/,                &
     &T13,' 4) Look at infiltration (rate and cum)',/,                  &
     &T13,' 5) Look at DAYTIM,DAYSTP,DAYAST,DAYSDH,DAYUBC',/,           &
     &T13,'    (simulated time and time step information)',/,           &
     &T13,' 6) Look at TMOIST (water storage)',/,                       &
     &T13,' 7) Look at Water Balance values')
6021  FORMAT(T13,' 8) Look at Plant Water Uptake values')
60211 FORMAT(T13,' 8) (plant option unavailable)')
6022  FORMAT(T13,' 9) Look at QVH (isothermal vapor flow) values')
60221 FORMAT(T13,' 9) (isothermal vapor option unavailable)')
6023  FORMAT(T13,'10) Look at QVT (thermal vapor flow) values')
60231 FORMAT(T13,'10) (thermal vapor option unavailable)')
6024  FORMAT(T13,'11) Look at T (temperature) values',/,                &
     &T13,'12) Look at QH (conductive heat flow) values',/,             &
     &T13,'13) Look at Heat Balance values')
6025  FORMAT(/' Enter the desired option ===> ',$)
6030  FORMAT(/' Options for reducing the amount of infil. output',/,    &
     &        '            1) output every DELSUB period',/,            &
     &      '    2 to',I5,') output reduced by a factor equal to ',/,   &
     &        '               the selected choice',//,                  &
     &        ' Choose output reduction option ===> ',$)
6040  FORMAT(/' Options for output device:',/,                          &
     &        '             0) screen',/,                               &
     &        '             1) file',//,                                &
     &        ' Choose output device option ===> ',$)
6050  FORMAT(/' Enter output file name ===> ',$)
6060  FORMAT(' UNSAT-H Version ',F4.2,/,                                &
     &       ' Input File:   ',A65,/,                                   &
     &       ' Results File: ',A65,/,                                   &
     &       ' Date of Run:      ',A11,/,                               &
     &       ' Time of Run:      ',A11,/)
6061  FORMAT('  Time (day)  ',T15,'H (cm)')
6062  FORMAT('  Time (day)  ',T15,'THETA (cm3/cm3)')
6063  FORMAT('  Time (day)  ',T15,'QL (cm)')
7063  FORMAT('  Time (day)  ',T15,'QVH (cm)')
6064  FORMAT('  Time (day)  ',T15,'T (K)')
7163  FORMAT('  Time (day)  ',T15,'QVT (cm)')
6065  FORMAT('  Time (day)  ',T15,'QH (J/cm2)')
6069  FORMAT(1X,11('-'),T15,6(11('-')))
6070  FORMAT(T7,'NODE =',T15,6(I7,4X))
6071  FORMAT(T2,'NODE OVER Z =',T15,6(I7,4X))
6072  FORMAT('  Time (day)  ',T15,'TA (K)',T26,'T (K)')
6074  FORMAT(1X,11('-'),T15,(10('-')),T26,6(11('-')))
6076  FORMAT(T7,'NODE =',T26,6(I7,4X))
6077  FORMAT(T2,'DEPTH (cm)=',T26,1P,6(E11.4))
6078  FORMAT(T2,'DEPTH (cm)=',T15,1P,6(E11.4))
6080  FORMAT(' Infil Rate ',T16,'Infil Rate',T27,'Cumulative',          &
     &    T38,'Cumulative',/,'  Time (d)',T15,'  (cm/hr)  ',T27,        &
     &' Time (d)',T37,' Infil (cm)',/,1X,11('-'),T15,3(1X,10('-')))
6082  FORMAT('  Time (day)  ',T15,'  Simulated    Time',T38,            &
     &' Attempted  Time Step  Upper BC',/,                              &
     &T15,'   Time (h)    Steps',T38,'Time Steps Reductions  Changed',/,&
     &    1X,11('-'),T15,5(1X,10('-')),/)
6085  FORMAT(/,'  Time (day)  ',T15,' TMOIST(cm)',/,                    &
     &    1X,11('-'),T15,1(1X,10('-')),/)
6130  FORMAT(' Water Balance Parameters Per Output Cycle (units = cm)', &
     &/,'  Time (day)',                                                 &
     &T18,'DAYRAN',T29,'DAYINF',T41,'DAYE',T51,'DAYTRA',T61,            &
     &'DAYQL(NPT)',T71,'MassBalance',/,1X,11('-'),T15,6(1X,10('-')),/)  &
6140  FORMAT(' Heat Balance Parameters Per Output Cycle (units = J/m2)',&
     &/,'  Time (day)',T19,'DAYRN',T29,'DAYSEN',T40,'DAYLE',T51,        &
     &'DAYSHF',                                                         &
     & T60,'DAYQHC(NPT)',T73,'DAYHBE',/,1X,11('-'),T15,6(1X,10('-')),/)
6090  FORMAT(1P,E12.5,2X,1P,6E11.4)
6100  FORMAT(1P,E12.5,2X,6E11.4)
6112  FORMAT(1P,E12.5,2X,1PE11.4,0P,4I11)
6120  FORMAT(/' The data have been written to file: ',/,1X,A60)
6200  FORMAT(' Plant Water Uptake Per Output Cycle (units = cm)')
6260  FORMAT(80('_'),/,' Press <RTN> to get LISTDATA options ===> ',$)
!-----------------------------------------------------------------------
!     End of subroutine LISTDATA
!-----------------------------------------------------------------------
      END
      SUBROUTINE HARDCOPY
!-----------------------------------------------------------------------
!     Called by DATAOUT
!
!     Calls DDSUM, INITSUM, NODEZ, and SUMMARY
!
!     Creates a hard copy of the results of an UNSAT-H simulation, 
!     including the initial conditions and the simulation-end summary.  
!     The user can choose to have the copy saved as a file on disk or 
!     have the copy printed directly without saving it on disk.
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      LJH = NTOTAL+1
      LOUT = LUW
      WRITE(LUS,6000)
      WRITE(LUS,6010)
      OFILE = TMFILE
      OFILE(NCHR:NCHR+3) = '.out'
      OPEN (UNIT=LOUT,FILE=OFILE,STATUS='UNKNOWN')
      CLOSE(UNIT=LOUT,STATUS='DELETE')
      OPEN(UNIT=LOUT,FILE=OFILE,STATUS='NEW')
      INQUIRE(UNIT=LOUT,NAME=OFILE)
      WRITE(LUS,6020)
      READ(LUR,*) OPTION
      CALL NODEZ(5)
      WRITE(LUS,*)
      IREC = 2
      JDAY = IDBEG-1
100   IF (OPTION .EQ. 1 .AND. IREC .GT. (NPRINT*NTOTAL+3))              &
     &    IREC = MAXREC-1
      IF (OPTION .EQ. 2 .AND. JDAY .EQ. IDEND .AND. STOPHR .LT. 24.)    &
     &    IREC = MAXREC-1
      IF (IREC .EQ. 2) THEN
!
!     Initial Condition summary
!
        CALL INITSUM
        IF (IERROR .EQ. 1) THEN
          WRITE(LUS,6040)
          GO TO 300
        ENDIF
      ELSE
!
!     Daily summary
!
        CALL DDSUM(LJH)
        IF (IERROR .EQ. 1) THEN
          WRITE(LUS,6041)
          GO TO 300
        ENDIF
      ENDIF
      IF (IREC .EQ. MAXREC-1) GO TO 200
      JDAY = JDAY+1
      IF (JDAY .EQ. IDEND) LJH = 1+NTOTAL*STOPHR/24.D0
      KDAY = JDAY-IDBEG+1
      IREC = 2+KDAY+(LJH+(KDAY-1)*NTOTAL-1)*NPRINT
      GO TO 100
!
!     Simulation-end Summary
!
200   WRITE(LOUT,6200)
      IREC = MAXREC
      CALL SUMMARY
300   CLOSE (LOUT,STATUS='KEEP')
      WRITE(LUS,6220) OFILE
      WRITE(LUS,6000)
      RETURN
!-----------------------------------------------------------------------
!     FORMAT Statements
!-----------------------------------------------------------------------
6000  FORMAT(/80('-')/)
6010  FORMAT(' HARDCOPY (Option No. 3)'/)
6020  FORMAT(' This HARDCOPY implementation does not support output',/,
     &       ' for time periods less than one day.',//,                 &
     &       ' The HARDCOPY options are:',//,                           &
     &       '             1) Initial conditions, summaries of ',/,     &
     &       '                the first and last days, and the ',/,     &
     &       '                year-end summary',/,                      &
     &       '             2) Same as option (1) but includes a ',/,    &
     &       '                summary of each and every day',//,        &
     &       ' Enter the desired option ===> ',$)
6040  FORMAT(/' HARDCOPY stopped:  Error reading initial conditions'/)
6041  FORMAT(/' HARDCOPY stopped:  Error reading DELSUB/daily ',        &
     &    'summaries'/)
6200  FORMAT(1H1)
6220  FORMAT(/' HARDCOPY output can be found in',/,' file ',A60)
!-----------------------------------------------------------------------
!     End of subroutine HARDCOPY
!-----------------------------------------------------------------------
      END
      SUBROUTINE WELCOME(name,ver)
!-----------------------------------------------------------------------
!     Called by DATAINH, UNSATH, and DATAOUT
!
!     Writes program header with version number and contact person
!-----------------------------------------------------------------------
      INCLUDE 'unsath.inc'
      CHARACTER name*7
      WRITE(LUS,10) name,ver
10    FORMAT(/,                                                         &
     &'         Program ',A7,/,                                         &
     &'         Version ',F4.2,//,                                      &
     &'         Contact:',/,                                            &
     &'           MJ Fayer',/,                                          &
     &'           Box 999, MSIN K9-33',/,                               &
     &'           Richland, WA  99352',/,                               &
     &'           phone 509-372-6045',/,                                &
     &'           FAX   509-372-6089',/,                                &
     &'           email mike.fayer@pnl.gov',/)
      RETURN
!-----------------------------------------------------------------------
!     End of subroutine WELCOME
!-----------------------------------------------------------------------
      END

